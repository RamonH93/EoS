<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='parsed_all_phishing Extract' inline='true' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='parsed_all_phishing' name='hyper.01yvfr70w7fz6v1crw3xu0umsce4'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tycho/Downloads/parsed_all_phishing.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.01yvfr70w7fz6v1crw3xu0umsce4' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>20</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>0</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>251431</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>754872</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>firsttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[firsttime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>firsttime</remote-alias>
            <ordinal>2</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>13958</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lasttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[lasttime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lasttime</remote-alias>
            <ordinal>3</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>150743</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phishtank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[phishtank]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>phishtank</remote-alias>
            <ordinal>4</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1172</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>virusname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[virusname]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>virusname</remote-alias>
            <ordinal>5</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>82</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>6</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17272</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recent]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>recent</remote-alias>
            <ordinal>7</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[response]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>response</remote-alias>
            <ordinal>8</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ip</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ip]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ip</remote-alias>
            <ordinal>9</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>955</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review</remote-name>
            <remote-type>129</remote-type>
            <local-name>[review]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>review</remote-alias>
            <ordinal>10</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>951</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[domain]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>domain</remote-alias>
            <ordinal>11</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1409</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>12</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>38</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>13</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[email]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>email</remote-alias>
            <ordinal>14</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>264</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inetnum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[inetnum]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>inetnum</remote-alias>
            <ordinal>15</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>454</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>netname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[netname]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>netname</remote-alias>
            <ordinal>16</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>378</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ddescr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ddescr]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ddescr</remote-alias>
            <ordinal>17</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>311</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ns1]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ns1</remote-alias>
            <ordinal>18</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1000</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ns2]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ns2</remote-alias>
            <ordinal>19</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>942</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ns3]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ns3</remote-alias>
            <ordinal>20</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>126</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ns4]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ns4</remote-alias>
            <ordinal>21</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>71</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ns5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ns5]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ns5</remote-alias>
            <ordinal>22</ordinal>
            <family>parsed_all_phishing.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Company name' datatype='string' name='[Calculation_3151464252261994498]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='lower([virusname])' />
      </column>
      <column caption='Uptime' datatype='real' name='[Calculation_388998461780828162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[lasttime]-[firsttime]' />
      </column>
      <column caption='TLD' datatype='string' name='[Calculation_388998461783785477]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LOWER(SPLIT([domain],&apos;.&apos;,-1))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Ddescr' datatype='string' name='[ddescr]' role='dimension' type='nominal' />
      <column caption='Domain' datatype='string' name='[domain]' role='dimension' type='nominal' />
      <column caption='Email' datatype='string' name='[email]' role='dimension' type='nominal' />
      <column caption='Firsttime' datatype='datetime' name='[firsttime]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inetnum' datatype='string' name='[inetnum]' role='dimension' type='nominal' />
      <column caption='Ip' datatype='string' name='[ip]' role='dimension' type='nominal' />
      <column caption='Lasttime' datatype='datetime' name='[lasttime]' role='dimension' type='ordinal' />
      <column caption='Line' datatype='integer' name='[line]' role='measure' type='quantitative' />
      <column caption='Netname' datatype='string' name='[netname]' role='dimension' type='nominal' />
      <column caption='Ns1' datatype='string' name='[ns1]' role='dimension' type='nominal' />
      <column caption='Ns2' datatype='string' name='[ns2]' role='dimension' type='nominal' />
      <column caption='Ns3' datatype='string' name='[ns3]' role='dimension' type='nominal' />
      <column caption='Ns4' datatype='string' name='[ns4]' role='dimension' type='nominal' />
      <column caption='Ns5' datatype='string' name='[ns5]' role='dimension' type='nominal' />
      <column caption='Phishtank' datatype='integer' name='[phishtank]' role='measure' type='quantitative' />
      <column caption='Recent' datatype='string' name='[recent]' role='dimension' type='nominal' />
      <column caption='Response' datatype='string' name='[response]' role='dimension' type='nominal' />
      <column caption='Review' datatype='string' name='[review]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <column caption='Virusname' datatype='string' name='[virusname]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.760726' measure-ordering='alphabetic' measure-percentage='0.239274' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;lb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;be&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BJ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;se&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BF&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ET&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;is&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;at&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TJ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;gb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AU&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CF&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;in&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;cn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;kz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;QA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;vn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;YU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IQ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Es&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;nl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;qa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;us&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;it&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;by&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;kw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;th&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;eg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ZM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GF&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;md&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ML&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;es&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;il&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PY&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Netherlands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='company'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Company</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='parsed_all_phishing Extract' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' />
          </datasources>
          <datasource-dependencies datasource='federated.17t9w1c1gfltwi1crmdem0hbxn7a'>
            <column caption='Company name' datatype='string' name='[Calculation_3151464252261994498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='lower([virusname])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_3151464252261994498]' derivation='None' name='[none:Calculation_3151464252261994498:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Virusname' datatype='string' name='[virusname]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261994498:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3151464252261994498:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3151464252261994498:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_3151464252261994498:nk]' member='&quot;other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261994498:nk]' direction='DESC' using='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' included-values='in-range'>
            <min>25000</min>
          </filter>
          <slices>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261994498:nk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' scope='rows' value='Number of phishing sites' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]</rows>
        <cols>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261994498:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='country'>
      <table>
        <view>
          <datasources>
            <datasource caption='parsed_all_phishing Extract' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' />
          </datasources>
          <datasource-dependencies datasource='federated.17t9w1c1gfltwi1crmdem0hbxn7a'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' included-values='in-range'>
            <min>10000</min>
          </filter>
          <columns>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:country:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </columns>
          <slices>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' value='Amount of' />
            <format attr='display-alternate-text' field='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]</rows>
        <cols>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ratio TLD'>
      <table>
        <view>
          <datasources>
            <datasource caption='parsed_all_phishing Extract' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' />
          </datasources>
          <datasource-dependencies datasource='federated.17t9w1c1gfltwi1crmdem0hbxn7a'>
            <column caption='AVG([Uptime]) * -1' datatype='real' name='[Calculation_3193263286315773963]' role='measure' type='quantitative' user:unnamed='ratio TLD'>
              <calculation class='tableau' formula='AVG([Calculation_388998461780828162]) * -1' />
            </column>
            <column caption='Uptime' datatype='real' name='[Calculation_388998461780828162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[lasttime]-[firsttime]' />
            </column>
            <column caption='TLD' datatype='string' name='[Calculation_388998461783785477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LOWER(SPLIT([domain],&apos;.&apos;,-1))' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Domain' datatype='string' name='[domain]' role='dimension' type='nominal' />
            <column caption='Firsttime' datatype='datetime' name='[firsttime]' role='dimension' type='ordinal' />
            <column caption='Lasttime' datatype='datetime' name='[lasttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_388998461783785477]' derivation='None' name='[none:Calculation_388998461783785477:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3193263286315773963]' derivation='User' name='[usr:Calculation_3193263286315773963:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_388998461783785477:nk]' />
              <groupfilter function='member' level='[none:Calculation_388998461783785477:nk]' member='&quot;8&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]' direction='DESC' using='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]' included-values='in-range'>
            <min>10000</min>
            <max>2065051</max>
          </filter>
          <slices>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[usr:Calculation_3193263286315773963:qk]' scope='rows' value='Average uptime' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[usr:Calculation_3193263286315773963:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17t9w1c1gfltwi1crmdem0hbxn7a].[sum:Number of Records:qk] + [federated.17t9w1c1gfltwi1crmdem0hbxn7a].[usr:Calculation_3193263286315773963:qk])</rows>
        <cols>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='uptime_tld'>
      <table>
        <view>
          <datasources>
            <datasource caption='parsed_all_phishing Extract' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' />
          </datasources>
          <datasource-dependencies datasource='federated.17t9w1c1gfltwi1crmdem0hbxn7a'>
            <column caption='Uptime' datatype='real' name='[Calculation_388998461780828162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[lasttime]-[firsttime]' />
            </column>
            <column caption='TLD' datatype='string' name='[Calculation_388998461783785477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='LOWER(SPLIT([domain],&apos;.&apos;,-1))' />
            </column>
            <column-instance column='[Calculation_388998461780828162]' derivation='Avg' name='[avg:Calculation_388998461780828162:qk]' pivot='key' type='quantitative' />
            <column caption='Domain' datatype='string' name='[domain]' role='dimension' type='nominal' />
            <column caption='Firsttime' datatype='datetime' name='[firsttime]' role='dimension' type='ordinal' />
            <column caption='Lasttime' datatype='datetime' name='[lasttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_388998461780828162]' derivation='None' name='[none:Calculation_388998461780828162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388998461783785477]' derivation='None' name='[none:Calculation_388998461783785477:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]' included-values='in-range'>
            <min>50.0</min>
          </filter>
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <filter class='categorical' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_388998461783785477:nk]' member='&quot;=adcom&quot;' />
              <groupfilter from='&quot;ac&quot;' function='range' level='[none:Calculation_388998461783785477:nk]' to='&quot;dog&quot;' />
              <groupfilter from='&quot;domains&quot;' function='range' level='[none:Calculation_388998461783785477:nk]' to='&quot;zw&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]' direction='DESC' using='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]' />
          <slices>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]</rows>
        <cols>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='uptime_virus'>
      <table>
        <view>
          <datasources>
            <datasource caption='parsed_all_phishing Extract' name='federated.17t9w1c1gfltwi1crmdem0hbxn7a' />
          </datasources>
          <datasource-dependencies datasource='federated.17t9w1c1gfltwi1crmdem0hbxn7a'>
            <column caption='Uptime' datatype='real' name='[Calculation_388998461780828162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[lasttime]-[firsttime]' />
            </column>
            <column-instance column='[Calculation_388998461780828162]' derivation='Avg' name='[avg:Calculation_388998461780828162:qk]' pivot='key' type='quantitative' />
            <column caption='Firsttime' datatype='datetime' name='[firsttime]' role='dimension' type='ordinal' />
            <column caption='Lasttime' datatype='datetime' name='[lasttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_388998461780828162]' derivation='None' name='[none:Calculation_388998461780828162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[virusname]' derivation='None' name='[none:virusname:nk]' pivot='key' type='nominal' />
            <column caption='Virusname' datatype='string' name='[virusname]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]' included-values='in-range'>
            <min>500.0</min>
          </filter>
          <filter class='quantitative' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <filter class='categorical' column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]'>
            <groupfilter function='level-members' level='[none:virusname:nk]' />
          </filter>
          <computed-sort column='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]' direction='DESC' using='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]' />
          <slices>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]</column>
            <column>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[avg:Calculation_388998461780828162:qk]</rows>
        <cols>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='uptime_virus'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:ok]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='uptime_tld'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:ok]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461780828162:qk]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:virusname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='company'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261912577:nk]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3151464252261994498:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='ratio TLD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_3193263286314500099:qk]</field>
            <field>[federated.17t9w1c1gfltwi1crmdem0hbxn7a].[none:Calculation_388998461783785477:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='company' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='country' width='192'>
      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
      4f8BxDVurVHa2rcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ratio TLD' width='192'>
      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
      E0y0NP8A4vvg2kNOzoMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='uptime_tld' width='192'>
      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
      Yf4/ZbJgR4/x4ikAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='uptime_virus' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
